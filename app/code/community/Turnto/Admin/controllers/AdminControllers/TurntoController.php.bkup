<?php

class Turnto_Admin_AdminControllers_TurntoController extends Mage_Adminhtml_Controller_Action
{
	public function indexAction()
	{
		$this->loadLayout();
		
		$resource = Mage::getSingleton('core/resource');
		$storeList = array();
                foreach (Mage::app()->getWebsites() as $website) {
 			foreach ($website->getGroups() as $group) {
        			$stores = $group->getStores();
        			foreach ($stores as $store) {
            				array_push($storeList, $store);
        			}
    			}
		}

		Mage::register('sites', $storeList);
		
		$this->_addLeft($this->getLayout()->createBlock('Turnto_Admin_Block_ShowTabsAdminBlock'));
		
		$this->renderLayout();
	}
	
	public function redirectAction()
	{
		$this->_redirectUrl('http://www.turnto.com');
	}
	
	public function postAction()
    {
        $post = $this->getRequest()->getPost();
        $catalogFeed = true;
        
        try {
            if (empty($post)) {
                Mage::throwException($this->__('Invalid form data.'));
            }
            
            $path = Mage::getBaseDir('media') . DS . 'turnto/';
            mkdir($path, 0755);
            
            if($post['feed_type'] == 'historical'){            
				/* form processing */        
				$startDate = $post['start_date'];
				
				if($startDate == null || $startDate == ""){
					Mage::getSingleton('adminhtml/session')->addError("Start Date is required");
					$this->_redirect('*/*/', array('active_tab' => 'turnto_hist_feed_tab'));
					return;
				}

				$scope = $post['scope'];
				$baseUrl =  Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK); 
				$baseMediaUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'catalog/product';
				if(isset($scope)){
					$baseUrl = Mage::app()->getStore($scope)->getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK);
   					$baseMediaUrl = Mage::app()->getStore($scope)->getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'catalog/product';
				}
				
				$resource = Mage::getSingleton('core/resource');     
				$readConnection = $resource->getConnection('core_read');
	
				$stmt = $readConnection->prepare(
					'select sales_flat_order.entity_id as orderid, '
       						.'sales_flat_order_item.created_at as orderdate, '
       						.'customer_email as email, '
       						.'ifnull(parent.name, sales_flat_order_item.name) as itemtitle, ' 
       						.'concat('.$readConnection->quote($baseUrl).', ifnull(parent.url_path, catalog_product_flat_1.url_path)) as itemurl, '
       						.'item_id as itemlineid, '
       						.'postcode as zip, '
     						.'customer_firstname as firstname, '
       						.'customer_lastname as lastname, '
       						.'ifnull(parent.sku, sales_flat_order_item.sku) as sku, '
       						.'grand_total as price, '
       						.'concat('.$readConnection->quote($baseMediaUrl).', ifnull(parent.small_image, catalog_product_flat_1.small_image)) as itemimageurl '
     					.'from sales_flat_order,'
       						.'sales_flat_order_item, '
       						.'sales_flat_order_address, '       
       						.'catalog_product_flat_1 '
       						.'left join catalog_product_super_link on catalog_product_flat_1.entity_id = catalog_product_super_link.product_id '
      						.'left join catalog_product_flat_1 as parent on catalog_product_super_link.parent_id = parent.entity_id '
     					.'where sales_flat_order.entity_id = sales_flat_order_item.order_id '
       						.'and sales_flat_order.entity_id = sales_flat_order_address.parent_id '
       						.'and sales_flat_order_item.product_id = catalog_product_flat_1.entity_id '
       						.'and sales_flat_order_item.created_at > str_to_date(\''.$startDate.'\', \'%m/%d/%Y\')', array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));
				$stmt->execute();

				$handle = fopen($path . 'histfeed.csv', 'w');
				
				fwrite($handle, "ORDERID\tORDERDATE\tEMAIL\tITEMTITLE\tITEMURL\tITEMLINEID\tZIP\tFIRSTNAME\tLASTNAME\tSKU\tPRICE\tITEMIMAGEURL");
				fwrite($handle, "\n");
				
				while ($row = $stmt->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
					foreach($row as $column){
						fwrite($handle, str_replace("\t", "\\t", $column));
						fwrite($handle, "\t");
					}
					
					fwrite($handle, "\n");
				}
				$stmt = null;
				fclose($handle); 
							
				$message = $this->__('The historical feed was successfully generated. Click the &quot;Download historical feed&quot; link to download.');
				$catalogFeed = false;
            }
            else{
            	/* form processing */        
				$scope = $post['scope'];
				
				$baseUrl =  Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK);
                                $baseMediaUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'catalog/product';
                                if(isset($scope)){
                                        $baseUrl = Mage::app()->getStore($scope)->getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK);
                                        $baseMediaUrl = Mage::app()->getStore($scope)->getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'catalog/product';
                                }

				$handle = fopen($path . 'catfeed.csv', 'w');
				
				fwrite($handle, "SKU\tIMAGEURL\tTITLE\tPRICE\tCURRENCY\tACTIVE\tITEMURL\tCATEGORY\tKEYWORDS\tREPLACEMENTSKU\tINSTOCK\tVIRTUALPARENTCODE\tCATEGORYPATHJSON\tISCATEGORY");
				fwrite($handle, "\n");
			
                		$products = Mage::getModel('catalog/product')->setStoreId($scope)->getCollection()->addAttributeToSelect('name')->addAttributeToSelect('*')->addAttributeToSelect('price')->addAttributeToSelect('image');
				if ($products) {
                        		foreach ($products as $product) {
                                		$product->setStoreId($scope);
                                		fwrite($handle, $product->getSku());
                                		fwrite($handle, "\t");
 						if($product->getImage() != null && $product->getImage() != "no_selection") {
                                 		       fwrite($handle, Mage::getModel('catalog/product_media_config')->getMediaUrl( $product->getImage() ));
                               			} else if ($product->getSmallImage() != null && $product->getSmallImage() != "no_selection") {
                                        		fwrite($handle, Mage::getModel('catalog/product_media_config')->getMediaUrl( $product->getSmallImage() ));
                                		} else if ($product->getThumbnail() != null && $product->getThumbnail() != "no_selection") {
                                        		fwrite($handle, Mage::getModel('catalog/product_media_config')->getMediaUrl( $product->getThumbnail() ));
                                		}                               		
						fwrite($handle, "\t");
                                		fwrite($handle, $product->getName());
                                		fwrite($handle, "\t");
                                		fwrite($handle, $product->getPrice());
                                		fwrite($handle, "\t");
                                		//CURRENCY
                                		fwrite($handle, "\t");
                                		//ACTIVE
                                		fwrite($handle, "Y");
                                		fwrite($handle, "\t");
                                		//ITEMURL
                                		fwrite($handle, $product->getProductUrl());
                                		fwrite($handle, "\t");
                                		//CATEGORY
						$ids = $product->getCategoryIds();
                                                fwrite($handle, (isset($ids[0]) ? $ids[0] : ''));
                                		fwrite($handle, "\t");
                                		// KEYWORDS
                                		fwrite($handle, "\t");
                                		// REPLACEMENTSKU
                                		fwrite($handle, "\t");
                                		//VIRTUALPARENTCODE
                                		fwrite($handle, "\t");
                                		//CATEGORYPATHJSON
                                		fwrite($handle, "\t");
                                		//ISCATEGORY
                                		fwrite($handle, "n");
                                		fwrite($handle, "\n");
                        		}
                		}	
				
				$categories = Mage::getModel('catalog/category')->setStoreId($scope)->getCollection()->addAttributeToSelect('name');
                		if ($categories) {
                        		foreach ($categories as $category) {
                                		if ($category->getId() == 1) {
							continue;
						}
						$category->setStoreId($scope);
                                		fwrite($handle, $category->getId());
                                		fwrite($handle, "\t");
						//IMAGEURL
                                		fwrite($handle, "\t");
                                		//TITLE
                                		fwrite($handle, $category->getName());
                                		fwrite($handle, "\t");
                                		//PRICE
                                		fwrite($handle, "\t");
                                		//CURRENCY
                                		fwrite($handle, "\t");
                                		//ACTIVE
                                		fwrite($handle, "Y");
                                		fwrite($handle, "\t");
                                		//ITEMURL
                                		fwrite($handle, $category->getUrl());
                                		fwrite($handle, "\t");
                                		//CATEGORY
                                		fwrite($handle, $category->getParentCategory()->getId());
                                		fwrite($handle, "\t");
                                		//KEYWORDS
                                		fwrite($handle, "\t");
                                		//REPLACEMENTSKU
                                		fwrite($handle, "\t");
                                		//VIRTUALPARENTCODE
                                		fwrite($handle, "\t");
                                		//CATEGORYPATHJSON
                                		fwrite($handle, "\t");
                                		//ISCATEGORY
                                		fwrite($handle, "Y");
                                		fwrite($handle, "\n");

                        		}
                		}

				fclose($handle); 
							
				$message = $this->__('The catalog feed was successfully generated. Click the &quot;Download catalog feed&quot; link to download.');
            }
            Mage::getSingleton('adminhtml/session')->addSuccess($message);
        } catch (Exception $e) {
            Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
        }
        
        if($catalogFeed){
			$this->_redirect('*/*/', array('active_tab' => 'turnto_catalog_feed_tab'));
		}else{
			$this->_redirectUrl(Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB).'media/turnto/histfeed.csv');
		}
    }
}
